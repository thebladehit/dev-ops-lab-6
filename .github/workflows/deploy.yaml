name: CI/CD Pipeline to AWS EC2

on:
  push:
    branches:
      - dev
      - main

env:
  AWS_REGION: eu-central-1
  ECR_REGISTRY: 699475939717.dkr.ecr.eu-central-1.amazonaws.com
  ECR_REPO_BACKEND: kpi-dev-ops-communication-controll
  ECR_REPO_FRONTEND: kpi-dev-ops-map-client

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build and push backend image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO_BACKEND:latest ./src/CommunicationControl
          docker push $ECR_REGISTRY/$ECR_REPO_BACKEND:latest

      - name: Build and push frontend image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO_FRONTEND:latest ./src/MapClient
          docker push $ECR_REGISTRY/$ECR_REPO_FRONTEND:latest

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.EC2_PROD_HOST || github.ref == 'refs/heads/dev' && secrets.EC2_DEV_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/your-project-folder
            docker-compose pull
            docker-compose up -d --remove-orphans
